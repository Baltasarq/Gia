package View;

import java.awt.Graphics;
import java.awt.Image;
import javax.swing.JPanel;
import java.awt.image.ImageObserver;
import java.util.Observer;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.imageio.ImageIO;
import java.io.*;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import com.borland.jbcl.layout.XYConstraints;
import java.awt.Color;

/**
 * Panel en el que se visualizarán las imágenes de los iconos que se usarán
 * en la aplicación generada.
 * @author Digna Rodríguez
 * @version 1.0
 */
public class PanelImage
    extends JPanel {
  private ImageIcon imagen;
  private JLabel label;
  private String ruta;

  /**
   * Constructor en el que se crea un nuevo panel con una imagen
   * @param imagenInicial Image que se carga.
   * @param r String ruta en la que se encuentra la imagen.
   */
  public PanelImage(ImageIcon imagenInicial, String r) {
    if (imagenInicial != null) {
      imagen = imagenInicial;
      ruta = r;
      int nHeight = imagen.getIconHeight();
      int nWidth = imagen.getIconWidth();
      label= new JLabel();
      label.setSize(nWidth+5,nHeight+5);
      label.setIcon(imagen);
      label.setAlignmentX(100);
      label.setAlignmentX( 100);
      label.setBackground(Color.red);
      JPanel p= new JPanel();
      p.setSize(500,300);
      p.setBackground(Color.red);
      this.add(p);
      this.add(label);

     // this.add(label, new XYConstraints((726 - nWidth) / 2, (506 - nHeight) / 2, nWidth, nHeight));

    }
  }



  /**
   * Método que se encarga de dibujar la imagen.
   * @param g Graphics gráfico que se crea con la imágen.
   */
  /*public void paint(Graphics g) {
    BufferedImage b = null;
    try {
      b = ImageIO.read(new File(ruta));
    }
    catch (IOException ex) {}

    int nHeight = b.getHeight();
    int nWidth = b.getWidth();
     g.drawImage(imagen.getImage(), (726 - nWidth) / 2, (506 - nHeight) / 2, this);
    setOpaque(false);
    super.paint(g);
  }

  /**
   * Método que sirve para cambiar la imagen de un panel.
   * @param nuevaImagen Image nueva imagen por la que se cambia.
   */
 /* public void setImagen(ImageIcon nuevaImagen) {
    imagen = nuevaImagen;
    repaint();
  }*/

}
